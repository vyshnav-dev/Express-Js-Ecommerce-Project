<!DOCTYPE html>
<html>
<head>
  <title>OTP Verification</title>
  <style>
    @media (max-width: 576px) {
      .card-body {
        margin-left: 1rem;
        margin-right: 1rem;
      }
    }

    @media (max-width: 768px) {
      .col-xl-5 {
        max-width: 100%;
      }
    }

    @media (max-width: 992px) {
      .col-lg-6 {
        max-width: 100%;
      }
    }

    /* Center OTP form on smaller screens */
    @media (max-width: 576px) {
      .row.d-flex.justify-content-center.align-items-center.h-150px {
        height: 100vh;
      }
    }

    /* Center OTP form on larger screens */
    @media (min-width: 992px) {
      .row.d-flex.justify-content-center.align-items-center.h-150px {
        height: 100vh;
      }
    }
  </style>
</head>
<body>
  <section class="vh-100" style="background-color:#101344; height:100%">
    <div class="container h-100">
      <div class="row d-flex justify-content-center align-items-center h-150px">
        <div class="col-lg-12 col-xl-11" style="margin-bottom: 50px;">
          <div class="card-body p-md-5" style="background-color: rgb(219, 219, 219); margin: 5rem auto; border-radius: 10px;">
            <div class="row justify-content-center">
              <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">
                <p class="text-center h3 fw-bold mb-5 mx-1 mx-md-4 mt-4">OTP Verification</p>
                <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                  <p id="otpTimer"></p>
                  <p id="resendTimer" style="display: none;"></p>
                </div>
                <form id="otpForm" action="/otp" method="post">
                  <div class="row justify-content-center d-flex flex-row align-items-center mb-4">
                    <i class="fas fa-mobile-alt fa-lg me-3 fa-fw"></i>
                    <div class="form-outline flex-fill mb-0">
                      <label class="form-label" for="otp">Enter OTP</label>
                      <input type="text" id="otp" class="form-control" name="otp" required>
                    </div>
                  </div>
                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                    <button type="submit" class="btn btn-primary btn-m">Verify OTP</button>
                  </div>
                </form>
                <form id="resendForm" action="/resend-otp" method="post" style="display: none;">
                  <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                    <button type="submit" class="btn btn-primary btn-m" id="resendButton">Resend OTP</button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script>
    // Time in seconds for the OTP send and resend functionality
    const otpSendTime = 60;
    const otpResendTime = 120;

    // Function to start the countdown timer for OTP send
    function startOTPSendTime() {
      let time = otpSendTime;
      const otpTimer = document.getElementById('otpTimer');

      const interval = setInterval(() => {
        const minutes = Math.floor(time / 60);
        const seconds = time % 60;
        otpTimer.textContent = `Resend OTP in ${minutes}:${seconds.toString().padStart(2, '0')}`;

        if (time <= 0) {
          clearInterval(interval);
          otpTimer.textContent = '';
          const resendForm = document.getElementById('resendForm');
          resendForm.style.display = 'block'; // Show the resend form
        }

        time--;
      }, 1000);
    }

    // Function to start the countdown timer for OTP resend
    function startOTPResendTime() {
      let time = otpResendTime;
      const resendButton = document.getElementById('resendButton');
      const resendTimer = document.getElementById('resendTimer');

      const interval = setInterval(() => {
        const minutes = Math.floor(time / 60);
        const seconds = time % 60;
        resendTimer.textContent = `Resend OTP in ${minutes}:${seconds.toString().padStart(2, '0')}`;

        if (time <= 0) {
          clearInterval(interval);
          resendTimer.textContent = '';
          resendButton.style.display = 'inline-block'; // Show the resend button
        }

        time--;
      }, 1000);
    }

    // Call the startOTPSendTime function to start the OTP send countdown
    startOTPSendTime();

    // Add event listener to the resend form to start the OTP resend countdown
    const resendForm = document.getElementById('resendForm');
    resendForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const resendButton = document.getElementById('resendButton');
      resendButton.style.display = 'none'; // Hide the resend button
      const resendTimer = document.getElementById('resendTimer');
      resendTimer.style.display = 'block'; // Show the resend timer
      startOTPResendTime();

      // Code to handle the OTP resend AJAX request
      const xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
          // Handle the response from the server
          const response = xhr.responseText;
          console.log(response); // Log the response or perform any other action
        }
      };
      xhr.open('POST', '/resend-otp', true);
      xhr.send();
    });
  </script>
</body>
</html>







